// Составить частотный словарь элементов двумерного массива

// НЕ ДОДЕЛАНО!!!

// string text = @"Я к вам пишу – чего же боле? 
// Что я могу еще сказать? 
// Теперь, я знаю, в вашей воле 
// Меня презреньем наказать. 
// Но вы, к моей несчастной доле 
// Хоть каплю жалости храня, 
// Вы не оставите меня. 
// Сначала я молчать хотела; 
// Поверьте: моего стыда 
// Вы не узнали б никогда, 
// Когда б надежду я имела 
// Хоть редко, хоть в неделю раз 
// В деревне нашей видеть вас, 
// Чтоб только слышать ваши речи, 
// Вам слово молвить, и потом 
// Все думать, думать об одном 
// И день и ночь до новой встречи. 
// Но, говорят, вы нелюдим; 
// В глуши, в деревне всё вам скучно, 
// А мы… ничем мы не блестим, 
// Хоть вам и рады простодушно. 
 
// Зачем вы посетили нас? 
// В глуши забытого селенья 
// Я никогда не знала б вас, 
// Не знала б горького мученья. 
// Души неопытной волненья 
// Смирив со временем (как знать?), 
// По сердцу я нашла бы друга, 
// Была бы верная супруга 
// И добродетельная мать. 
 
// Другой!.. Нет, никому на свете 
// Не отдала бы сердца я! 
// То в вышнем суждено совете… 
// То воля неба: я твоя; 
// Вся жизнь моя была залогом 
// Свиданья верного с тобой; 
// Я знаю, ты мне послан богом, 
// До гроба ты хранитель мой 
// Ты в сновиденьях мне являлся, 
// Незримый, ты мне был уж мил, 
// Твой чудный взгляд меня томил, 
// В душе твой голос раздавался 
// Давно… нет, это был не сон! 
// Ты чуть вошел, я вмиг узнала, 
// Вся обомлела, запылала 
// И в мыслях молвила: вот он! 
// Не правда ль? Я тебя слыхала: 
// Ты говорил со мной в тиши, 
// Когда я бедным помогала 
// Или молитвой услаждала 
// Тоску волнуемой души? 
// И в это самое мгновенье 
// Не ты ли, милое виденье, 
// В прозрачной темноте мелькнул, 
// Приникнул тихо к изголовью? 
// Не ты ль, с отрадой и любовью, 
// Слова надежды мне шепнул? 
// Кто ты, мой ангел ли хранитель, 
// Или коварный искуситель: 
// Мои сомненья разреши. 
// Быть может, это все пустое, 
// Обман неопытной души! 
// И суждено совсем иное… 
// Но так и быть! Судьбу мою 
// Отныне я тебе вручаю, 
// Перед тобою слезы лью, 
// Твоей защиты умоляю… 
// Вообрази: я здесь одна, 
// Никто меня не понимает, 
// Рассудок мой изнемогает, 
// И молча гибнуть я должна. 
// Я жду тебя: единым взором 
// Надежды сердца оживи 
// Иль сон тяжелый перерви, 
// Увы, заслуженным укором! 
 
// Кончаю! Страшно перечесть… 
// Стыдом и страхом замираю… 
// Но мне порукой ваша честь, 
// И смело ей себя вверяю";

// string text = "(1,2) (2,3) (4,5) (6,7)"
// 			.Replace("(", "")
// 			.Replace(")", "");
// Console.WriteLine(text);

// // переводим текст в массив, можно написать []data, но оставляем тип var
// // Split - метод помогает сделать разбивку текста с учета символа разделителя - у нас это пробел
// var data = text.Split(" ")
// 			.Select(item => item.Split(',')) //Select - выбираем элемент item и с помощью Split выводим через запятую
// 			.Select(e => (x: int.Parse(e[0]), y: int.Parse(e[1])))  // переводим элементы массива 'e' в кортеж чисел
// 			.Where(e => e.x % 2 == 0) //Where - где только четный элемент кортежа строк и далее делаем для него следующее действие:
// 			.Select(point => (point.x * 10, point.y * 5)) //выбираем точку 'point' и увеличиваем в несколько раз
// 			.ToArray(); //превращает вышесделанные результаты в явный массив
// for (int i = 0; i < data.Length; i++)
// {
// 	Console.WriteLine(data[i]);
// }

string text = @"dfdf, fg. dlf
dddd? gg gg. ggg
dddd; gg, gg";

 text = text.Replace("-", "")
			.Replace("?", "")
			.Replace(",", "")
			.Replace(".", "")
			.Replace("\n", "")
			.Replace("!", "")
			.Replace(":", "")
			.Replace(";", "")
			.Replace("(", "")
			.Replace(")", "");

string[] arrayWord = text.Split(" ").ToArray();

void PrintArray(string[] array)
{
    // int count = array.Length; 
    for (int i = 0; i < array.Length; i++) 
    {
        Console.Write($"{array[i]} ");
    }
    Console.WriteLine();
}

PrintArray(arrayWord);
// Console.Write(arrayWord);

// // void PrintArrayOfStr (string [] text) 
// // { 
// //     for (int i = 0; i < text.Length; i++) 
// //     { 
// //         Console.Write (text.Length); 
// //     } 
// // } 


// // PrintArrayOfStr (arrayOfStr); 

// // Console.WriteLine(arrayOfStr.Length); 

// string[] FindUniqWords(string[] text)
// {
// 	string[] clearArrayOfWords = new string[text.Length];
// 	for (int i = 0; i < text.Length; i++)
// 	{

// 		for (int j = 0; j < text.Length; j++)
// 		{
// 			if (text[i] == clearArrayOfWords[j])
// 			{
// 				break;
// 			}
// 			else clearArrayOfWords[j] = text[i];
// 		}
// 	}
// 	return clearArrayOfWords;
// }

// string[] textWithUniqWords = FindUniqWords(arrayOfStr);
// foreach (var item in textWithUniqWords)
// {
// 	Console.WriteLine(item);
// }